/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC721PermitEverywhere,
  ERC721PermitEverywhereInterface,
} from "../../ERC721PermitEverywhere.sol/ERC721PermitEverywhere";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TRANSFER_PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "currentNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "contract IERC721",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "allowAnyTokenId",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct ERC721PermitEverywhere.PermitTransferFrom",
        name: "permit",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct ERC721PermitEverywhere.Signature",
        name: "sig",
        type: "tuple",
      },
    ],
    name: "executePermitSafeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "contract IERC721",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "allowAnyTokenId",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct ERC721PermitEverywhere.PermitTransferFrom",
        name: "permit",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct ERC721PermitEverywhere.Signature",
        name: "sig",
        type: "tuple",
      },
    ],
    name: "executePermitTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC721",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "allowAnyTokenId",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct ERC721PermitEverywhere.PermitTransferFrom",
        name: "permit",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "hashPermit",
    outputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "increaseAmount",
        type: "uint256",
      },
    ],
    name: "increaseNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604080518082018252601681527f4552433732315065726d6974457665727977686572650000000000000000000060209182015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f918101919091527fff0c6cde152381239593278894998efe19c148b72600a5949fcce7ec1c929d12918101919091527f06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c60608201524660808201523060a082015260c00160408051601f1981840301815291905280516020909101206080527fa93f45edc34d40b36ddbf0996488a87b8e7050ec19ce1a44bc84b66f57e6d03f60a05260805160a051610b0161013d6000396000818161012e015261017501526000818160c101526101540152610b016000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636437ecfc1161005b5780636437ecfc146100e357806379f7573a1461010357806387eb658a14610116578063e59ba9241461012957600080fd5b80631648a5a5146100825780632acb40a2146100a75780633644e515146100bc575b600080fd5b610095610090366004610766565b610150565b60405190815260200160405180910390f35b6100ba6100b53660046107bb565b6101ff565b005b6100957f000000000000000000000000000000000000000000000000000000000000000081565b6100956100f1366004610882565b60006020819052908152604090205481565b6100ba6101113660046108a6565b610293565b6100ba6101243660046108bf565b6102ba565b6100957f000000000000000000000000000000000000000000000000000000000000000081565b60007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000602085101561019f57fe5b601f198501805160a0909601805192825294855260e0812095905290925250604080517f19010000000000000000000000000000000000000000000000000000000000006000908152600293909352602293909352604290912091905290565b61020b8786848461036c565b6102186020830183610882565b73ffffffffffffffffffffffffffffffffffffffff1663b88d4fde88888888886040518663ffffffff1660e01b8152600401610258959493929190610925565b600060405180830381600087803b15801561027257600080fd5b505af1158015610286573d6000803e3d6000fd5b5050505050505050505050565b33600090815260208190526040812080548392906102b29084906109b5565b909155505050565b6102c68584848461036c565b6102d36020830183610882565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015286811660248301526044820186905291909116906323b872dd90606401600060405180830381600087803b15801561034d57600080fd5b505af1158015610361573d6000803e3d6000fd5b505050505050505050565b61037c6040830160208401610882565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103fb5760405162461bcd60e51b815260206004820152601560248201527f5350454e4445525f4e4f545f5045524d4954544544000000000000000000000060448201526064015b60405180910390fd5b61040b60808301606084016109cd565b806104195750828260400135145b6104655760405162461bcd60e51b815260206004820152601660248201527f544f4b454e5f49445f4e4f545f5045524d49545445440000000000000000000060448201526064016103f2565b42826080013510156104b95760405162461bcd60e51b815260206004820152600e60248201527f5045524d49545f4558504952454400000000000000000000000000000000000060448201526064016103f2565b61051c6105086104ce368590038501856109e8565b73ffffffffffffffffffffffffffffffffffffffff871660009081526020819052604081208054916104ff83610a04565b91905055610150565b61051736849003840184610a3c565b61059c565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146105965760405162461bcd60e51b815260206004820152600e60248201527f494e56414c49445f5349474e455200000000000000000000000000000000000060448201526064016103f2565b50505050565b6000600183836040015184600001518560200151604051600081526020016040526040516105e6949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015610608573d6000803e3d6000fd5b5050604051601f19015191505073ffffffffffffffffffffffffffffffffffffffff81166106785760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f5349474e415455524500000000000000000000000000000060448201526064016103f2565b92915050565b73ffffffffffffffffffffffffffffffffffffffff811681146106a057600080fd5b50565b803580151581146106b357600080fd5b919050565b600060a082840312156106ca57600080fd5b60405160a0810181811067ffffffffffffffff82111715610714577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405290508082356107258161067e565b815260208301356107358161067e565b602082015260408381013590820152610750606084016106a3565b6060820152608083013560808201525092915050565b60008060c0838503121561077957600080fd5b61078384846106b8565b9460a0939093013593505050565b600060a082840312156107a357600080fd5b50919050565b6000606082840312156107a357600080fd5b6000806000806000806000610180888a0312156107d757600080fd5b87356107e28161067e565b965060208801356107f28161067e565b955060408801359450606088013567ffffffffffffffff8082111561081657600080fd5b818a0191508a601f83011261082a57600080fd5b81358181111561083957600080fd5b8b602082850101111561084b57600080fd5b6020830196508095505050506108648960808a01610791565b9150610874896101208a016107a9565b905092959891949750929550565b60006020828403121561089457600080fd5b813561089f8161067e565b9392505050565b6000602082840312156108b857600080fd5b5035919050565b600080600080600061016086880312156108d857600080fd5b85356108e38161067e565b945060208601356108f38161067e565b9350604086013592506109098760608801610791565b91506109198761010088016107a9565b90509295509295909350565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156109c8576109c8610986565b500190565b6000602082840312156109df57600080fd5b61089f826106a3565b600060a082840312156109fa57600080fd5b61089f83836106b8565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a3557610a35610986565b5060010190565b600060608284031215610a4e57600080fd5b6040516060810181811067ffffffffffffffff82111715610a98577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b80604052508235815260208301356020820152604083013560ff81168114610abf57600080fd5b6040820152939250505056fea264697066735822122051fd1d02b90e4f4a504f113b199958cc5ec13321378a15bd046ac14028427f4364736f6c634300080f0033";

type ERC721PermitEverywhereConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721PermitEverywhereConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721PermitEverywhere__factory extends ContractFactory {
  constructor(...args: ERC721PermitEverywhereConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC721PermitEverywhere";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721PermitEverywhere> {
    return super.deploy(overrides || {}) as Promise<ERC721PermitEverywhere>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721PermitEverywhere {
    return super.attach(address) as ERC721PermitEverywhere;
  }
  override connect(signer: Signer): ERC721PermitEverywhere__factory {
    return super.connect(signer) as ERC721PermitEverywhere__factory;
  }
  static readonly contractName: "ERC721PermitEverywhere";

  public readonly contractName: "ERC721PermitEverywhere";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721PermitEverywhereInterface {
    return new utils.Interface(_abi) as ERC721PermitEverywhereInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721PermitEverywhere {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721PermitEverywhere;
  }
}
